" vimrc by Lowe Thiderman (daethorian@ninjaloot.se)
" Released under the WTFPL (http://sam.zoy.org/wtfpl/).

" Once upon a time based on MetaCosms vimrc (http://www.vi-improved.org/vimrc.php)

" Basics {
    set nocompatible  " disable horrible vi compatability mode!
    set background=dark  " we are using a dark background
    set hidden " use useable buffers
    syntax enable
" }
" General {
    set history=100 " How many lines of history to remember
    set iskeyword+=_,$,@,%,# " none of these should be word dividers, so make them not be
    set nostartofline " leave my cursor where it was
    set backspace=indent,eol,start
    set gdefault " always replace everything when substituting
    set autoread " reload files that has changed externally
    set ttyfast " Oh, right, this isn't the 70s
" }
" Pathogen {
    call pathogen#runtime_append_all_bundles()
" }
" Filetypes {
    au Filetype python setlocal foldmethod=indent expandtab ft=python.django
    au Filetype python setlocal makeprg=pep8\ -r\ %
    au Filetype python syn keyword Special self
    au Filetype html,htmldjango set foldmethod=indent expandtab ft=htmldjango.html

    " TODO: omg full paths :////
    au Filetype javascript setlocal makeprg=cat\ %\ \\\|\ /usr/bin/js\ /home/daethorian/config/vim/jslint/mylintrun.js\ %
    au Filetype javascript setlocal errorformat=%f:%l:%c:%m
    au Filetype javascript syn keyword Special $

    au FileType help nnoremap <buffer> <Enter> <C-]>
" }
" Files/Backups (XDG style) {
    set viminfo='100,<50,s10,h,!,n~/.cache/vim/viminfo
    set backup " make backup file
    set backupdir=~/.cache/vim/backup " where to put backup file
    set directory=~/.cache/vim/tmp " directory is the directory for temp file

    " Autocreate the needed directories if they don't exist
    if isdirectory(&directory) == 0
        silent! !mkdir -p "$HOME/.cache/vim/backup"
        silent! !mkdir -p "$HOME/.cache/vim/tmp"
    endif
" }
" Vim UI {
    set showcmd " show the command being typed
    set wildmenu " turn on wild menu
    " XXX: This one breaks in 7.3.138 for some reason
    set wildmode=list:longest " turn on wild menu in special format (long format)
    set wildignore=*.o,*.obj,*.bak,*.exe,*.pyc,*.swp,*.jpg,*.gif,*.png " ignore some formats
    set splitbelow " Split below
    set splitright " Split to the right
    "set ruler " Always show current positions along the bottom
    set cmdheight=1 " the command bar is 1 high
    set number " turn on line numbers
    set lazyredraw " do not redraw while running macros (much faster)
    set noerrorbells " don't make noise
    set laststatus=2 " always have the statusline
    set scrolljump=10 " don't scroll the edges

    if !exists("g:disable_status_syntax")
        let g:disable_status_syntax = 1 " Disable the syntax in statusline
    endif

    " 256 colors to putty
    if &term =~ "xterm"
        set t_Co=256
        if has("terminfo")
            let &t_Sf=nr2char(27).'[3%p1%dm'
            let &t_Sb=nr2char(27).'[4%p1%dm'
        else
            let &t_Sf=nr2char(27).'[3%dm'
            let &t_Sb=nr2char(27).'[4%dm'
        endif
    endif
" }
" Visual Cues {
    if exists('+colorcolumn')
        set colorcolumn=+1 " Show a colored column one column from &tw
    endif
    set showmatch " show matching brackets
    set hlsearch " highlight searched phrases
    set incsearch " highlight as you type you search phrase
    set scrolloff=5 " Keep 5 lines (top/bottom) for scope
    set sidescrolloff=5 " Keep 5 lines at the side
    set novisualbell " don't blink
    set report=0 " always report number of lines changed
    set list " Show whitespace characters
    if has("multi_byte")
        set listchars=tab:»\ ,extends:›,precedes:‹,trail:·,nbsp:✂
        let &sbr = nr2char(8618).' ' " Show ↪ at the beginning of wrapped lines
    else
        set listchars=tab:>\ ,extends:>,precedes:<,trail:-,nbsp:%
    endif
" }
" Indent Related {
    set softtabstop=4 " unify
    set shiftwidth=4 " unify
    set tabstop=4 " real tabs should be 4, but they will show with set list on
    set copyindent " follow the conventions laid before us
    set expandtab " do not use tabs
    let g:pyindent_open_paren = &sw " Just add one shiftwidth when indenting python
    filetype plugin indent on " load filetype plugins and indent settings
" }
" Text Formatting/Layout {
    set formatoptions=tcrq " See Help (complex)
    set shiftround " when at 3 spaces, and I hit > ... go to 4, not 5
    set nowrap " do not wrap line
    set preserveindent " but above all -- follow the conventions laid before us
    set ignorecase " case insensitive by default
    set smartcase " if there are caps, go case-sensitive
    set completeopt=menu,longest,preview " improve the way autocomplete works
    set textwidth=79 " use the universal convention as a default
" }
" Spelling {
    if has('spell')
        autocmd filetype mail set spell spelllang=sv
        autocmd filetype *commit* set spell spelllang=en
    endif
" }
" Folding {
    set foldenable " Turn on folding
    set foldmarker={,} " Fold C style code
    set foldcolumn=1 " Give 1 column for fold markers
    set foldmethod=marker " Fold on the marker
    set foldlevel=0 " Open files with folds closed
    set foldopen=undo,search,jump,hor,tag,mark,quickfix " open folds when you do stuff

    set foldtext=FoldWithLines()
" }
" Colorschemes {
    if &term == 'screen-256color' || &term == 'rxvt-unicode-256color'
        let g:force_lofi = 0
        colorscheme neverland
    else
        let g:force_lofi = 1
        colorscheme ninjaloot
    endif

    " 
    au ColorScheme * runtime local/highlights.vim
" }

for f in split(globpath(&runtimepath, 'local/*.vim'), "\n")
  execute 'source ' . f
endfor

" vim: set et:sw=4:fmr=marker:fdm={,}
