;;; ujelly-theme.el --- Ujelly theme for GNU Emacs 24 (deftheme)

;; Author: Mark Tran <mark.tran@gmail.com>
;; URL: http://github.com/marktran/color-theme-ujelly
;; Version: 1.0.43

;; Inspired by jellybeans: http://www.vim.org/scripts/script.php?script_id=2555.
(deftheme ujelly "The ujelly color theme")

(let* ((class '((class color) (min-colors 89)))
      (ujelly-fg              (if (display-graphic-p) "#ffffff" "color-255"))
      (ujelly-bg              (if (display-graphic-p) "#111111" "color-234"))
      (ujelly-blue-0          (if (display-graphic-p) "#8fbfdc" "color-110"))
      (ujelly-blue-1          (if (display-graphic-p) "#97aad3" "color-74"))
      (ujelly-blue-2          (if (display-graphic-p) "#97aad3" "color-123"))
      (ujelly-green-0         (if (display-graphic-p) "#99ad6a" "color-107"))
      (ujelly-green-1         (if (display-graphic-p) "#447799" "color-66"))
      (ujelly-green-2         (if (display-graphic-p) "#a8ff60" "color-155"))
      (ujelly-green-3         (if (display-graphic-p) "#a8ff60" "color-108"))
      (ujelly-grey-0          (if (display-graphic-p) "#888888" "color-244"))
      (ujelly-grey-1          (if (display-graphic-p) "#7f7f7f" "color-240"))
      (ujelly-grey-2          (if (display-graphic-p) "#151515" "color-237"))
      (ujelly-grey-3          (if (display-graphic-p) "#1c1c1c" "color-235"))
      (ujelly-grey-4          (if (display-graphic-p) "#222222" "color-236"))
      (ujelly-orange-0        (if (display-graphic-p) "#ffb964" "color-209"))
      (ujelly-purple-0        (if (display-graphic-p) "#8197bf" "color-103"))
      (ujelly-purple-1        (if (display-graphic-p) "#474e90" "color-60"))
      (ujelly-purple-2        (if (display-graphic-p) "#cd00cd" "color-96"))
      (ujelly-purple-3        (if (display-graphic-p) "#540063" "color-53"))
      (ujelly-purple-4        (if (display-graphic-p) "#a40073" "color-125"))
      (ujelly-red-0           (if (display-graphic-p) "#97aad2" "color-197"))
      (ujelly-red-1           (if (display-graphic-p) "#dd0093" "color-162"))
      (ujelly-red-2           (if (display-graphic-p) "#de5577" "color-168"))
      (ujelly-red-3           (if (display-graphic-p) "#ff73fd" "color-207"))
      (ujelly-red-4           (if (display-graphic-p) "#ff73fd" "color-196"))
      (ujelly-yellow-0        (if (display-graphic-p) "#fad07a" "color-222"))
      (ujelly-yellow-1        (if (display-graphic-p) "#ffff00" "color-179"))
      (ujelly-delimiter-1     (if (display-graphic-p) "#8090a0" "color-103"))
      (ujelly-delimiter-2     (if (display-graphic-p) "#90a080" "color-108"))
      (ujelly-delimiter-3     (if (display-graphic-p) "#a08090" "color-138"))
      (ujelly-delimiter-4     (if (display-graphic-p) "#9080a0" "color-101"))
      (ujelly-delimiter-5     (if (display-graphic-p) "#8090a0" "color-110"))
      (ujelly-delimiter-6     (if (display-graphic-p) "#90a080" "color-182"))
      (ujelly-delimiter-7     (if (display-graphic-p) "#a08090" "color-104"))
      (ujelly-delimiter-8     (if (display-graphic-p) "#9080a0" "color-177"))
      (ujelly-delimiter-9     (if (display-graphic-p) "#9080a0" "color-65"))
      (ujelly-delimiter-10    (if (display-graphic-p) "#9080a0" "color-139"))
      (ujelly-delimiter-11    (if (display-graphic-p) "#9080a0" "color-144"))
      (ujelly-delimiter-12    (if (display-graphic-p) "#9080a0" "color-38"))
      (ujelly-delimiter-13    (if (display-graphic-p) "#9080a0" "color-188"))
      (ujelly-delimiter-14    (if (display-graphic-p) "#9080a0" "color-117"))
      (ujelly-delimiter-15    (if (display-graphic-p) "#9080a0" "color-111"))

      ;; darktooth translations
      (ujelly-dark0_hard      (if (display-graphic-p) "#1D2021" "color-234"))
      (ujelly-dark0           (if (display-graphic-p) "#282828" "color-235"))
      (ujelly-dark0_soft      (if (display-graphic-p) "#32302F" "color-236"))
      (ujelly-dark1           (if (display-graphic-p) "#3C3836" "color-237"))
      (ujelly-dark2           (if (display-graphic-p) "#504945" "color-239"))
      (ujelly-dark3           (if (display-graphic-p) "#665C54" "color-241"))
      (ujelly-dark4           (if (display-graphic-p) "#7C6F64" "color-243"))

      (ujelly-medium          (if (display-graphic-p) "#928374" "color-245")) ;; or 244

      (ujelly-light0_hard     (if (display-graphic-p) "#FFFFC8" "color-230"))
      (ujelly-light0          (if (display-graphic-p) "#FDF4C1" "color-229"))
      (ujelly-light0_soft     (if (display-graphic-p) "#F4E8BA" "color-228"))
      (ujelly-light1          (if (display-graphic-p) "#EBDBB2" "color-223"))
      (ujelly-light2          (if (display-graphic-p) "#D5C4A1" "color-250"))
      (ujelly-light3          (if (display-graphic-p) "#BDAE93" "color-248"))
      (ujelly-light4          (if (display-graphic-p) "#A89984" "color-246"))

      (ujelly-bright_red      ujelly-red-0)
      (ujelly-bright_green    ujelly-green-2)
      (ujelly-bright_yellow   (if (display-graphic-p) "#FABD2F" "color-214"))
      (ujelly-bright_blue     (if (display-graphic-p) "#83A598" "color-109"))
      (ujelly-bright_purple   (if (display-graphic-p) "#D3869B" "color-175"))
      (ujelly-bright_aqua     (if (display-graphic-p) "#8EC07C" "color-108"))
      (ujelly-bright_orange   (if (display-graphic-p) "#FE8019" "color-208"))

      ;; neutral, no 256-color code, requested, nice work-around meanwhile
      (ujelly-neutral_red     (if (display-graphic-p) "#FB4934" "#D75F5F"))
      (ujelly-neutral_green   (if (display-graphic-p) "#B8BB26" "#AFAF00"))
      (ujelly-neutral_yellow  (if (display-graphic-p) "#FABD2F" "#FFAF00"))
      (ujelly-neutral_blue    (if (display-graphic-p) "#83A598" "#87AFAF"))
      (ujelly-neutral_purple  (if (display-graphic-p) "#D3869B" "#D787AF"))
      (ujelly-neutral_aqua    (if (display-graphic-p) "#8EC07C" "#87AF87"))
      (ujelly-neutral_orange  (if (display-graphic-p) "#FE8019" "#FF8700"))

      (ujelly-faded_red       (if (display-graphic-p) "#9D0006" "color-88"))
      (ujelly-faded_green     (if (display-graphic-p) "#79740E" "color-100"))
      (ujelly-faded_yellow    (if (display-graphic-p) "#B57614" "color-136"))
      (ujelly-faded_blue      (if (display-graphic-p) "#076678" "color-24"))
      (ujelly-faded_purple    (if (display-graphic-p) "#8F3F71" "color-96"))
      (ujelly-faded_aqua      (if (display-graphic-p) "#427B58" "color-66"))
      (ujelly-faded_orange    (if (display-graphic-p) "#AF3A03" "color-130"))

      (ujelly-dark_red        (if (display-graphic-p)  "#421E1E" "color-52"))
      (ujelly-dark_green      (if (display-graphic-p)  "#2B280F" "color-22"))
      (ujelly-dark_yellow     (if (display-graphic-p)  "#4D3B27" "color-3"))
      (ujelly-dark_blue       (if (display-graphic-p)  "#2B3C44" "color-4"))
      (ujelly-dark_purple     (if (display-graphic-p)  "#4E3D45" "color-57"))
      (ujelly-dark_aqua       (if (display-graphic-p)  "#36473A" "color-23"))
      (ujelly-dark_orange     (if (display-graphic-p)  "#613620" "color-130"))

      (ujelly-delimiter-one   (if (display-graphic-p) "#5C7E81" "color-66"))
      (ujelly-delimiter-two   (if (display-graphic-p) "#837486" "color-102"))
      (ujelly-delimiter-three (if (display-graphic-p) "#9C6F68" "color-94"))
      (ujelly-delimiter-four  (if (display-graphic-p) "#7B665C" "color-137"))

      (ujelly-white           (if (display-graphic-p) "#FFFFFF" "white"))
      (ujelly-black           (if (display-graphic-p) "#000000" "black"))
      (ujelly-sienna          (if (display-graphic-p) "#DD6F48" "sienna"))
      (ujelly-darkslategray4  (if (display-graphic-p) "#528B8B" "DarkSlateGray4"))
      (ujelly-lightblue4      (if (display-graphic-p) "#66999D" "LightBlue4"))
      (ujelly-burlywood4      (if (display-graphic-p) "#BBAA97" "burlywood4"))
      (ujelly-aquamarine4     (if (display-graphic-p) "#83A598" "aquamarine4"))
      (ujelly-turquoise4      (if (display-graphic-p) "#61ACBB" "turquoise4"))

      )

      (custom-theme-set-faces
       'ujelly
       ;; Defaults
       `(default                             ((t (:foreground ,ujelly-fg :background ,ujelly-bg))))
       `(font-lock-builtin-face              ((t (:foreground ,ujelly-orange-0 :bold t))))
       `(font-lock-comment-face              ((t (:foreground ,ujelly-grey-0))))
       `(font-lock-constant-face             ((t (:foreground ,ujelly-green-1 :bold t))))
       `(font-lock-doc-face                  ((t (:foreground ,ujelly-green-0))))
       `(font-lock-function-name-face        ((t (:foreground ,ujelly-yellow-0 :bold t))))
       `(font-lock-keyword-face              ((t (:foreground ,ujelly-purple-0 :bold t))))
       `(font-lock-preprocessor-face         ((t (:foreground ,ujelly-fg))))
       `(font-lock-string-face               ((t (:foreground ,ujelly-green-0))))
       `(font-lock-type-face                 ((t (:foreground ,ujelly-orange-0 :bold t))))
       `(font-lock-variable-name-face        ((t (:foreground ,ujelly-blue-1 :bold t))))
       `(font-lock-warning-face              ((t (:foreground ,ujelly-red-1))))
       `(font-lock-regexp-grouping-construct ((t (:foreground ,ujelly-yellow-0 :bold t))))
       `(font-lock-regexp-grouping-backslash ((t (:foreground ,ujelly-red-0 :bold t))))
       `(fringe                              ((t (:foreground ,ujelly-grey-1 :background ,ujelly-grey-4))))
       `(match                               ((t (:background ,ujelly-red-1))))
       `(minibuffer-prompt                   ((t (:foreground ,ujelly-fg))))
       `(mode-line                           ((t (:background ,ujelly-grey-2 :foreground ,ujelly-fg ))))
       `(button                              ((t (:foreground ,ujelly-blue-1 :weight bold :underline t))))
       `(help-argument-name                  ((t (:foreground ,ujelly-green-0 :weight bold))))
       `(mode-line-inactive                  ((t (:background ,ujelly-grey-4 :foreground ,ujelly-fg ))))

       ;; avy
       `(avy-background-face ((t (:foreground ,ujelly-dark3 ))))
       `(avy-lead-face       ((t (:background ,ujelly-bright_red :foreground ,ujelly-dark0_hard :weight bold ))))
       `(avy-lead-face-0     ((t (:background ,ujelly-bright_green :foreground ,ujelly-dark0_hard :weight bold ))))
       `(avy-lead-face-1     ((t (:background ,ujelly-bright_yellow :foreground ,ujelly-dark0_hard :weight bold ))))
       `(avy-lead-face-2     ((t (:background ,ujelly-bright_blue :foreground ,ujelly-dark0_hard :weight bold ))))

       ;; Compilation
       `(compilation-error                   ((t (:foreground ,ujelly-red-0 :weight bold))))
       `(compilation-info                    ((t (:foreground ,ujelly-yellow-0 :weight bold))))
       `(compilation-line-number             ((t (:foreground ,ujelly-blue-0 :weight bold))))
       `(compilation-mode-line-exit          ((t (:foreground ,ujelly-green-0 :weight bold))))
       `(compilation-mode-line-fail          ((t (:foreground ,ujelly-red-0 :weight bold))))
       `(compilation-mode-line-run           ((t (:foreground ,ujelly-yellow-0 :weight bold))))

       ;; dired
       `(diredp-date-time                    ((t (:foreground ,ujelly-fg))))
       `(diredp-deletion                     ((t (:foreground ,ujelly-red-0 :background ,ujelly-bg))))
       `(diredp-dir-heading                  ((t (:foreground ,ujelly-yellow-0 :background ,ujelly-bg))))
       `(diredp-dir-priv                     ((t (:foreground ,ujelly-green-2 :background ,ujelly-bg))))
       `(diredp-exec-priv                    ((t (:foreground ,ujelly-fg :background ,ujelly-bg))))
       `(diredp-file-name                    ((t (:foreground ,ujelly-fg))))
       `(diredp-file-suffix                  ((t (:foreground ,ujelly-fg))))
       `(diredp-link-priv                    ((t (:foreground ,ujelly-fg))))
       `(diredp-number                       ((t (:foreground ,ujelly-fg))))
       `(diredp-no-priv                      ((t (:foreground ,ujelly-fg :background ,ujelly-bg))))
       `(diredp-rare-priv                    ((t (:foreground ,ujelly-red-0 :background ,ujelly-bg))))
       `(diredp-read-priv                    ((t (:foreground ,ujelly-fg :background ,ujelly-bg))))
       `(diredp-symlink                      ((t (:foreground ,ujelly-red-3))))
       `(diredp-write-priv                   ((t (:foreground ,ujelly-fg :background ,ujelly-bg))))

       ;; Emmet
       `(emmet-preview-output                ((t (:background ,ujelly-purple-1))))

       ;; Git
       `(git-commit-comment-file-face        ((t (:foreground ,ujelly-fg))))
       `(git-commit-comment-heading-face     ((t (:foreground ,ujelly-yellow-0))))
       `(git-commit-summary-face             ((t (:foreground ,ujelly-fg))))

       `(header-line                         ((t (:foreground ,ujelly-fg))))

       ;; helm
       `(helm-buffer-size                    ((t (:foreground ,ujelly-fg))))
       `(helm-candidate-number               ((t (:foreground ,ujelly-fg :background ,ujelly-bg))))
       `(helm-ff-directory                   ((t (:background ,ujelly-bg))))
       `(helm-ff-file                        ((t (:foreground ,ujelly-fg))))
       `(helm-grep-cmd                       ((t (:foreground ,ujelly-black :background ,ujelly-grey-2 :bold t))))
       `(helm-match                          ((t (:foreground ,ujelly-blue-0 :background ,ujelly-bg :bold t))))
       `(helm-selection                      ((t (:foreground ,ujelly-yellow-1 :background ,ujelly-grey-2 :bold t))))
       `(helm-selection-line                 ((t (:foreground ,ujelly-yellow-1 :background ,ujelly-grey-1 :bold t))))
       `(helm-source-header                  ((t (:foreground ,ujelly-red-1 :background ,ujelly-grey-4))))
       `(hl-line                             ((t (:background ,ujelly-grey-4))))
       `(isearch                             ((t (:foreground ,ujelly-fg :background ,ujelly-red-1))))
       `(isearch-fail                        ((t (:background ,ujelly-red-1))))
       `(ido-first-match                     ((t (:foreground ,ujelly-yellow-0))))
       `(ido-only-match                      ((t (:foreground ,ujelly-green-0))))
       `(ido-subdir                          ((t (:foreground ,ujelly-fg))))
       `(ido-virtual                         ((t (:foreground ,ujelly-purple-0))))
       `(lazy-highlight                      ((t (:foreground ,ujelly-red-1 :background nil))))
       `(linum                               ((t (:foreground ,ujelly-grey-1 :background ,ujelly-grey-3))))

       ;; magit
       `(magit-branch                        ((t (:foreground ,ujelly-green-0 :bold t))))
       `(magit-branch-local                  ((t (:foreground ,ujelly-red-0 :bold t))))
       `(magit-diff-add                      ((t (:foreground ,ujelly-green-0))))
       `(magit-diff-del                      ((t (:foreground ,ujelly-red-0))))
       `(magit-diff-file-header              ((t (:inherit nil :foreground ,ujelly-red-2))))
       `(magit-diff-hunk-header              ((t (:inherit nil :foreground ,ujelly-yellow-0))))
       `(magit-item-highlight                ((t (:weight normal :background ,ujelly-grey-4))))
       `(magit-log-author                    ((t (:foreground ,ujelly-fg))))
       `(magit-log-sha1                      ((t (:foreground ,ujelly-red-0))))
       `(magit-log-head-label-local          ((t (:foreground ,ujelly-fg))))
       `(magit-whitespace-warning-face       ((t (:background ,ujelly-red-0))))

       ;; Magit
       `(magit-blame-date                    ((t (:foreground ,ujelly-faded_red))))
       `(magit-blame-hash                    ((t (:foreground ,ujelly-faded_red))))
       `(magit-blame-heading                 ((t (:foreground ,ujelly-faded_red))))
       `(magit-blame-name                    ((t (:foreground ,ujelly-faded_red))))
       `(magit-blame-summary                 ((t (:foreground ,ujelly-faded_red))))
       `(magit-branch                        ((t (:foreground ,ujelly-aquamarine4))))
       `(magit-branch-remote                 ((t (:foreground ,ujelly-green-2 :weight bold))))
       `(magit-cherry-equivalent             ((t (:foreground ,ujelly-neutral_orange))))
       `(magit-cherry-unmatched              ((t (:foreground ,ujelly-neutral_purple))))
       `(magit-diff-add                      ((t (:background ,ujelly-bright_green))))
       `(magit-diff-added                    ((t (:foreground ,ujelly-green-0))))
       `(magit-diff-added-highlight          ((t (:foreground ,ujelly-green-0 :weight bold :background ,ujelly-grey-3))))
       `(magit-diff-base                     ((t (:foreground ,ujelly-dark0))))
       `(magit-diff-base-highlight           ((t (:foreground ,ujelly-dark0 :background ,ujelly-grey-3))))
       `(magit-diff-conflict-heading         ((t (:foreground ,ujelly-faded_red))))
       `(magit-diff-context                  ((t (:foreground ,ujelly-dark3))))
       `(magit-diff-context-highlight        ((t (:foreground ,ujelly-dark3 :background ,ujelly-grey-3))))
       `(magit-diff-del                      ((t (:foreground ,ujelly-bright_red))))
       `(magit-diff-file-header              ((t (:foreground ,ujelly-bright_blue))))
       `(magit-diff-file-heading             ((t (:foreground ,ujelly-fg))))
       `(magit-diff-file-heading-highlight   ((t (:foreground ,ujelly-fg :background ,ujelly-grey-2 :weight bold))))
       `(magit-diff-file-heading-selection   ((t (:foreground ,ujelly-fg))))
       `(magit-diff-hunk-header              ((t (:foreground ,ujelly-neutral_aqua))))
       `(magit-diff-hunk-heading             ((t (:foreground ,ujelly-light3 :background ,ujelly-dark0_soft))))
       `(magit-diff-hunk-heading-highlight   ((t (:foreground ,ujelly-light2 :background ,ujelly-dark1))))
       `(magit-diff-hunk-heading-selection   ((t (:foreground ,ujelly-bright_aqua :weight bold))))
       `(magit-diff-lines-boundary           ((t (:foreground ,ujelly-faded_red))))
       `(magit-diff-lines-heading            ((t (:foreground ,ujelly-faded_red))))
       `(magit-diff-merge-current            ((t (:background ,ujelly-dark_yellow))))
       `(magit-diff-merge-diff3-separator    ((t (:foreground ,ujelly-neutral_orange :weight bold))))
       `(magit-diff-merge-proposed           ((t (:background ,ujelly-dark_green))))
       `(magit-diff-merge-separator          ((t (:foreground ,ujelly-neutral_orange))))
       `(magit-diff-none                     ((t (:foreground ,ujelly-medium))))
       `(magit-diff-our                      ((t (:foreground ,ujelly-faded_red))))
       `(magit-diff-our-highlight            ((t (:foreground ,ujelly-faded_red))))
       `(magit-diff-removed                  ((t (:foreground ,ujelly-red-2 ))))
       `(magit-diff-removed-highlight        ((t (:foreground ,ujelly-red-2 :weight bold :background ,ujelly-grey-3))))
       `(magit-diff-their                    ((t (:foreground ,ujelly-faded_red))))
       `(magit-diff-their-highlight          ((t (:foreground ,ujelly-faded_red))))
       `(magit-diff-whitespace-warning       ((t (:foreground ,ujelly-faded_red))))
       `(magit-diffstat-added                ((t (:foreground ,ujelly-bright_green))))
       `(magit-diffstat-removed              ((t (:foreground ,ujelly-bright_red))))
       `(magit-item-highlight                ((t (:background ,ujelly-dark0_hard :weight normal))))
       `(magit-item-mark                     ((t (:background ,ujelly-dark0))))
       `(magit-key-mode-args-face            ((t (:foreground ,ujelly-light4))))
       `(magit-key-mode-button-face          ((t (:foreground ,ujelly-neutral_orange :weight bold))))
       `(magit-key-mode-header-face          ((t (:foreground ,ujelly-light4 :weight bold))))
       `(magit-key-mode-switch-face          ((t (:foreground ,ujelly-turquoise4 :weight bold))))
       `(magit-log-author                    ((t (:foreground ,ujelly-neutral_aqua))))
       `(magit-log-date                      ((t (:foreground ,ujelly-faded_orange))))
       `(magit-log-graph                     ((t (:foreground ,ujelly-light1))))
       `(magit-log-head-label-bisect-bad     ((t (:foreground ,ujelly-bright_red))))
       `(magit-log-head-label-bisect-good    ((t (:foreground ,ujelly-bright_green))))
       `(magit-log-head-label-bisect-skip    ((t (:foreground ,ujelly-neutral_yellow))))
       `(magit-log-head-label-default        ((t (:foreground ,ujelly-neutral_blue))))
       `(magit-log-head-label-head           ((t (:foreground ,ujelly-faded_yellow :weight bold))))
       `(magit-log-head-label-local          ((t (:foreground ,ujelly-neutral_green :weight bold))))
       `(magit-log-head-label-patches        ((t (:foreground ,ujelly-faded_orange))))
       `(magit-log-head-label-remote         ((t (:foreground ,ujelly-neutral_purple :weight bold))))
       `(magit-log-head-label-tags           ((t (:foreground ,ujelly-neutral_green))))
       `(magit-log-head-label-wip            ((t (:foreground ,ujelly-neutral_red))))
       `(magit-log-message                   ((t (:foreground ,ujelly-light1))))
       `(magit-log-reflog-label-amend        ((t (:foreground ,ujelly-bright_blue))))
       `(magit-log-reflog-label-checkout     ((t (:foreground ,ujelly-bright_yellow))))
       `(magit-log-reflog-label-cherry-pick  ((t (:foreground ,ujelly-neutral_red))))
       `(magit-log-reflog-label-commit       ((t (:foreground ,ujelly-neutral_green))))
       `(magit-log-reflog-label-merge        ((t (:foreground ,ujelly-bright_green))))
       `(magit-log-reflog-label-other        ((t (:foreground ,ujelly-faded_red))))
       `(magit-log-reflog-label-rebase       ((t (:foreground ,ujelly-bright_purple))))
       `(magit-log-reflog-label-remote       ((t (:foreground ,ujelly-neutral_orange))))
       `(magit-log-reflog-label-reset        ((t (:foreground ,ujelly-neutral_yellow))))
       `(magit-log-sha1                      ((t (:foreground ,ujelly-sienna))))
       `(magit-process-ng                    ((t (:foreground ,ujelly-bright_red :weight bold))))
       `(magit-process-ok                    ((t (:foreground ,ujelly-bright_green :weight bold))))
       `(magit-section-heading               ((t (:foreground ,ujelly-orange-0 :weight bold))))
       `(magit-section-highlight             ((t (:background ,ujelly-grey-2 :weight bold))))
       `(magit-signature-bad                 ((t (:foreground ,ujelly-bright_red :weight bold))))
       `(magit-signature-good                ((t (:foreground ,ujelly-bright_green :weight bold))))
       `(magit-signature-none                ((t (:foreground ,ujelly-faded_red))))
       `(magit-signature-untrusted           ((t (:foreground ,ujelly-bright_purple :weight bold))))
       `(magit-tag                           ((t (:foreground ,ujelly-neutral_green))))
       `(magit-whitespace-warning-face       ((t (:background ,ujelly-faded_red))))

       ;; neotree
       `(neo-banner-face              ((t (:foreground ,ujelly-faded_red :background nil))))
       `(neo-button-face              ((t (:foreground ,ujelly-medium :weight bold :background nil))))
       `(neo-dir-link-face            ((t (:foreground ,ujelly-blue-1 :weight bold :background nil))))
       `(neo-expand-btn-face          ((t (:foreground ,ujelly-dark2 :weight bold :background nil))))
       `(neo-file-link-face           ((t (:foreground ,ujelly-bright_orange :weight normal :background nil))))
       `(neo-header-face              ((t (:foreground ,ujelly-faded_red :background nil))))
       `(neo-root-dir-face            ((t (:foreground ,ujelly-bright_purple :weight bold :background nil))))
       `(neo-vc-added-face            ((t (:foreground ,ujelly-faded_green :background nil))))
       `(neo-vc-conflict-face         ((t (:foreground ,ujelly-white :background ,ujelly-orange-0))))
       `(neo-vc-default-face          ((t (:foreground ,ujelly-fg :background nil))))
       `(neo-vc-edited-face           ((t (:foreground ,ujelly-faded_red :background nil))))
       `(neo-vc-ignored-face          ((t (:foreground ,ujelly-faded_red :background nil))))
       `(neo-vc-missing-face          ((t (:foreground ,ujelly-faded_red :background nil))))
       `(neo-vc-needs-merge-face      ((t (:foreground ,ujelly-faded_red :background nil))))
       `(neo-vc-needs-update-face     ((t (:foreground ,ujelly-faded_red :background nil))))
       `(neo-vc-removed-face          ((t (:foreground ,ujelly-faded_red :background nil))))
       `(neo-vc-unlocked-changes-face ((t (:foreground ,ujelly-faded_yellow :background nil))))
       `(neo-vc-unregistered-face     ((t (:foreground ,ujelly-faded_red :background nil))))
       `(neo-vc-up-to-date-face       ((t (:foreground ,ujelly-faded_red :background nil))))
       `(neo-vc-user-face             ((t (:foreground ,ujelly-faded_red :background nil))))

       ;; org-mode
       `(org-agenda-date-today               ((t (:foreground ,ujelly-light2 :slant italic :weight bold))) t)
       `(org-agenda-structure                ((t (:inherit font-lock-comment-face ))))
       `(org-archived                        ((t (:foreground ,ujelly-light0 :weight bold ))))
       `(org-checkbox                        ((t (:foreground ,ujelly-light2 :background ,ujelly-dark0 :box ( :line-width 1 :style released-button) ))))
       `(org-date                            ((t (:foreground ,ujelly-faded_blue :underline t ))))
       `(org-deadline-announce               ((t (:foreground ,ujelly-faded_red ))))
       `(org-document-info                   ((t (:foreground ,ujelly-blue-2 :weight bold ))))
       `(org-document-info-keyword           ((t (:foreground ,ujelly-purple-1 :weight bold ))))
       `(org-document-title                  ((t (:foreground ,ujelly-green-2 :weight bold ))))
       `(org-done                            ((t (:foreground ,ujelly-bright_green :bold t :weight bold ))))
       `(org-formula                         ((t (:foreground ,ujelly-bright_yellow ))))
       `(org-headline-done                   ((t (:foreground ,ujelly-bright_green ))))
       `(org-hide                            ((t (:foreground ,ujelly-dark0 ))))
       `(org-level-1                         ((t (:foreground ,ujelly-orange-0 :weight bold ))))
       `(org-level-2                         ((t (:foreground ,ujelly-green-0 :weight bold ))))
       `(org-level-3                         ((t (:foreground ,ujelly-blue-0 :weight bold))))
       `(org-level-4                         ((t (:foreground ,ujelly-purple-0 :weight bold))))
       `(org-level-5                         ((t (:foreground ,ujelly-green-1 :weight bold))))
       `(org-level-6                         ((t (:foreground ,ujelly-bright_green ))))
       `(org-level-7                         ((t (:foreground ,ujelly-bright_red ))))
       `(org-level-8                         ((t (:foreground ,ujelly-bright_blue ))))
       `(org-link                            ((t (:foreground ,ujelly-bright_yellow :underline t :bold t))))
       `(org-meta-line                       ((t (:foreground ,ujelly-grey-1 :background nil :underline nil :weight bold ))))
       `(org-scheduled                       ((t (:foreground ,ujelly-bright_green ))))
       `(org-scheduled-previously            ((t (:foreground ,ujelly-bright_red ))))
       `(org-scheduled-today                 ((t (:foreground ,ujelly-bright_blue ))))
       `(org-sexp-date                       ((t (:foreground ,ujelly-bright_blue :underline t ))))
       `(org-special-keyword                 ((t (:inherit font-lock-comment-face ))))
       `(org-table                           ((t (:foreground ,ujelly-bright_green ))))
       `(org-tag                             ((t (:bold t :weight bold ))))
       `(org-time-grid                       ((t (:foreground ,ujelly-bright_orange ))))
       `(org-todo                            ((t (:foreground ,ujelly-red-0 :weight bold :bold t ))))
       `(org-upcoming-deadline               ((t (:inherit font-lock-keyword-face ))))
       `(org-warning                         ((t (:foreground ,ujelly-bright_red :weight bold :underline nil :bold t ))))
       `(org-column                          ((t (:background ,ujelly-dark0 ))))
       `(org-column-title                    ((t (:background ,ujelly-dark0_hard :underline t :weight bold ))))
       `(org-mode-line-clock                 ((t (:foreground ,ujelly-light2 :background ,ujelly-dark0 ))))
       `(org-mode-line-clock-overrun         ((t (:foreground ,ujelly-black :background ,ujelly-bright_red ))))
       `(org-ellipsis                        ((t (:foreground ,ujelly-bright_yellow :underline t ))))
       `(org-footnote                        ((t (:foreground ,ujelly-faded_aqua :underline t ))))


       `(region                              ((t (:background ,ujelly-grey-2))))

       ;; Flycheck
       `(flycheck-warning                    ((t (:foreground ,ujelly-white :background ,ujelly-red-2 :box t :bold t :underline t ))))
       `(flycheck-error                      ((t (:foreground ,ujelly-white :background ,ujelly-faded_red :box t :bold t :underline t ))))

       ;; RainbowDelimiters
       `(rainbow-delimiters-depth-1-face     ((t (:foreground ,ujelly-delimiter-1 ))))
       `(rainbow-delimiters-depth-2-face     ((t (:foreground ,ujelly-delimiter-2 ))))
       `(rainbow-delimiters-depth-3-face     ((t (:foreground ,ujelly-delimiter-3 ))))
       `(rainbow-delimiters-depth-4-face     ((t (:foreground ,ujelly-delimiter-4 ))))
       `(rainbow-delimiters-depth-5-face     ((t (:foreground ,ujelly-delimiter-5 ))))
       `(rainbow-delimiters-depth-6-face     ((t (:foreground ,ujelly-delimiter-6 ))))
       `(rainbow-delimiters-depth-7-face     ((t (:foreground ,ujelly-delimiter-7 ))))
       `(rainbow-delimiters-depth-8-face     ((t (:foreground ,ujelly-delimiter-8 ))))
       `(rainbow-delimiters-depth-9-face     ((t (:foreground ,ujelly-delimiter-9 ))))
       `(rainbow-delimiters-depth-10-face    ((t (:foreground ,ujelly-delimiter-10 ))))
       `(rainbow-delimiters-depth-11-face    ((t (:foreground ,ujelly-delimiter-11 ))))
       `(rainbow-delimiters-depth-12-face    ((t (:foreground ,ujelly-delimiter-12 ))))

       ;; RainbowIdentifiers
       `(rainbow-identifiers-identifier-1    ((t (:foreground ,ujelly-delimiter-1 ))))
       `(rainbow-identifiers-identifier-2    ((t (:foreground ,ujelly-delimiter-2 ))))
       `(rainbow-identifiers-identifier-3    ((t (:foreground ,ujelly-delimiter-3 ))))
       `(rainbow-identifiers-identifier-4    ((t (:foreground ,ujelly-delimiter-4 ))))
       `(rainbow-identifiers-identifier-5    ((t (:foreground ,ujelly-delimiter-5 ))))
       `(rainbow-identifiers-identifier-6    ((t (:foreground ,ujelly-delimiter-6 ))))
       `(rainbow-identifiers-identifier-7    ((t (:foreground ,ujelly-delimiter-7 ))))
       `(rainbow-identifiers-identifier-8    ((t (:foreground ,ujelly-delimiter-8 ))))
       `(rainbow-identifiers-identifier-9    ((t (:foreground ,ujelly-delimiter-9 ))))
       `(rainbow-identifiers-identifier-10   ((t (:foreground ,ujelly-delimiter-10 ))))
       `(rainbow-identifiers-identifier-11   ((t (:foreground ,ujelly-delimiter-11 ))))
       `(rainbow-identifiers-identifier-12   ((t (:foreground ,ujelly-delimiter-12 ))))
       `(rainbow-identifiers-identifier-13   ((t (:foreground ,ujelly-delimiter-13 ))))
       `(rainbow-identifiers-identifier-14   ((t (:foreground ,ujelly-delimiter-14 ))))
       `(rainbow-identifiers-identifier-15   ((t (:foreground ,ujelly-delimiter-15 ))))

       `(smerge-markers                      ((t (:foreground ,ujelly-yellow-0 :background ,ujelly-grey-2))))
       `(smerge-refined-change               ((t (:foreground ,ujelly-green-0))))

       `(trailing-whitespace                 ((t (:background ,ujelly-red-1))))
       `(whitespace-trailing                 ((t (:background ,ujelly-red-1))))

       `(web-mode-builtin-face               ((t (:foreground ,ujelly-blue-0))))
       `(web-mode-html-attr-name-face        ((t (:foreground ,ujelly-purple-0))))
       `(web-mode-html-tag-face              ((t (:foreground ,ujelly-fg))))
       `(web-mode-symbol-face                ((t (:foreground ,ujelly-green-1))))

       ;; visual-regexp colors
       `(vr/group-0                          ((t (:foreground ,ujelly-delimiter-1))))
       `(vr/group-1                          ((t (:foreground ,ujelly-delimiter-2))))
       `(vr/group-2                          ((t (:foreground ,ujelly-delimiter-3))))
       `(vr/match-0                          ((t (:background ,ujelly-grey-3 :foreground ,ujelly-yellow-0 :weight bold))))
       `(vr/match-1                          ((t (:background ,ujelly-grey-4 :foreground ,ujelly-yellow-0 :weight bold))))
       `(vr/match-separator-face             ((t (:background ,ujelly-bg :foreground ,ujelly-yellow-0))))

       ))

;; Underlines are the absolute worst.
(mapc
 (lambda (face)
   (set-face-attribute face nil ':underline nil))
 (face-list))

;;;###autoload
(when load-file-name
  (add-to-list 'custom-theme-load-path
               (file-name-as-directory (file-name-directory load-file-name))))

(provide-theme 'ujelly)

;;; ujelly-theme.el ends here
